#!/bin/bash

ARGOS_ENV=~/env/argos

function setup_dependencies {
    echo -e "\n\n\n"
    echo -e "$(tput setaf 3)Installing dependencies...$(tput sgr0)"
    echo -e "\n\n\n"

    # Check if OSX.
    if [[ "$OSTYPE" =~ ^darwin ]]
    then
        brew install rabbitmq
        brew install wget

        # Required by mwlib.
        brew install libevent
        brew install re2c

        # Redis
        brew install redis

        # Bzr, for python-dateutil
        brew install bzr

        # gcc, for building scipy
        brew install gcc
        brew install gfortran

        # PostgreSQL
        brew install postgres

    # Otherwise, assume Linux...
    else
        # Various python deps and also scipy deps.
        sudo apt-get -y install python3 python3-dev python3-setuptools build-essential zlib1g-dev libssl-dev libreadline-dev libyaml-dev libcurl4-openssl-dev curl git-core python-software-properties python-pip python-dev
        sudo apt-get install python3-pip -y

        # This *ensures* scipy deps are there!
        sudo apt-get -y build-dep python3-scipy

        sudo apt-get install rabbitmq-server -y
        sudo apt-get install unzip -y

        # Java for the NER server
        sudo apt-get install openjdk-7-jre -y

        # Required by mwlib.
        sudo apt-get install libevent-dev -y
        sudo apt-get install re2c -y

        # Required by lxml.
        sudo apt-get install libxml2-dev libxslt1-dev python-dev lib32z1-dev -y

        # Redis
        sudo apt-get install redis-server -y

        # Bzr, for python-dateutil
        sudo apt-get install bzr -y

        # PostgreSQL
        sudo apt-get install postgresql postgresql-server-dev-9.3 -y

        sudo pip3 install virtualenv
    fi
}

function setup_virtualenv {
    echo -e "\n\n\n"
    echo -e "$(tput setaf 3)Setting up virtual environment...$(tput sgr0)"
    echo -e "\n\n\n"

    # Setup the Python 3.3 virtualenv.
    virtualenv -p `which python3` $ARGOS_ENV --no-site-packages
    source $ARGOS_ENV/bin/activate
    pip install numpy cython
    pip install -r requirements.txt
}

function setup_nltk {
    echo -e "\n\n\n"
    echo -e "$(tput setaf 3)Gathering NLTK data...$(tput sgr0)"
    echo -e "\n\n\n"

    # Download NLTK (Python 3) data.
    source $ARGOS_ENV/bin/activate

    python -m nltk.downloader wordnet
    python -m nltk.downloader stopwords
    python -m nltk.downloader punkt
    python -m nltk.downloader words
    python -m nltk.downloader maxent_treebank_pos_tagger
    python -m nltk.downloader maxent_ne_chunker
}

function setup_ner {
    echo -e "\n\n\n"
    echo -e "$(tput setaf 3)Setting up Stanford NER...$(tput sgr0)"
    echo -e "\n\n\n"

    wget -O $ARGOS_ENV/ner.zip 'http://nlp.stanford.edu/software/stanford-ner-2013-06-20.zip'
    unzip -o $ARGOS_ENV/ner.zip
    mv 'stanford-ner-2013-06-20' $ARGOS_ENV/ner
    rm $ARGOS_ENV/ner.zip
}

function setup_knowledge {
    echo -e "\n\n\n"
    echo -e "$(tput setaf 3)Setting up Apache Jena/Fuseki...$(tput sgr0)"
    echo -e "\n\n\n"

    JENA_VERSION=2.12.0
    FUSEKI_VERSION=1.1.0

    wget -O $ARGOS_ENV/jena.tar.gz "http://mirrors.gigenet.com/apache//jena/binaries/apache-jena-$JENA_VERSION"
    wget -O $ARGOS_ENV/fuseki.tar.gz "http://mirrors.gigenet.com/apache//jena/binaries/jena-fuseki-$FUSEKI_VERSION-distribution.tar.gz"

    # Extract only the Jena tools we need directly to jena/.
    mkdir $ARGOS_ENV/jena
    tar -xzvf $ARGOS_ENV/jena.tar.gz
    mv "apache-jena-$JENA_VERSION" $ARGOS_ENV/jena/jena
    rm $ARGOS_ENV/jena.tar.gz

    tar -xvzf $ARGOS_ENV/fuseki.tar.gz
    mv "jena-fuseki-$FUSEKI_VERSION" $ARGOS_ENV/jena/fuseki
    rm $ARGOS_ENV/fuseki.tar.gz

    # Make a directory to store the TDB (the triple database, i.e.
    # the knowledge database).
    mkdir -p $ARGOS_ENV/data/knowledge

    # Download and digest the DBpedia dumps.
    python -c "from argos.core.digester import knowledge; knowledge.download(); knowledge.digest()"
}

function setup_spotlight {
    echo -e "\n\n\n"
    echo -e "$(tput setaf 3)Setting up DBpedia Spotlight...$(tput sgr0)"
    echo -e "\n\n\n"

    mkdir -p $ARGOS_ENV/data/spotlight
    wget -O $ARGOS_ENV/data/spotlight/en_2+2.tar.gz http://spotlight.sztaki.hu/downloads/en_2+2.tar.gz
    tar -xvf $ARGOS_ENV/data/spotlight/en_2+2.tar.gz
    mv 'en_2+2' $ARGOS_ENV/data/spotlight
    rm $ARGOS_ENV/data/spotlight/en_2+2.tar.gz

    wget -O $ARGOS_ENV/data/spotlight/dbpedia-spotlight-0.7.jar http://spotlight.sztaki.hu/downloads/dbpedia-spotlight-0.7.jar
}


echo -e "\n\n\n\n\n"
echo -e "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo -e "$(tput setaf 6)Welcome to $(tput setaf 3)Argos$(tput setaf 6)!$(tput sgr0)"
echo -e "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo -e "\n\n\n\n\n"

setup_dependencies
setup_virtualenv
setup_ner
setup_knowledge
setup_nltk
setup_spotlight

# Create databases.
./run db:create

./run doc

echo -e "\n\n\n\n\n"
echo -e "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo -e "$(tput setaf 6)Finished setting up $(tput setaf 3)Argos$(tput setaf 6)!$(tput sgr0)"
echo -e "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo -e "\n\n\n\n\n"
